/*
 * Camunda Rest API
 * TODO: Add Description
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.Model1task17Bid7Drequest;
import io.swagger.client.model.Model1task1createrequest;
import io.swagger.client.model.Model1taskrequest;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TasksApi
 */
@Ignore
public class TasksApiTest {

    private final TasksApi api = new TasksApi();

    
    /**
     * Task8f9d8732968d11e7B2330242ac110002Get
     *
     * TODO: Add Description
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void taskByIdGetTest() throws ApiException {
        String accept = null;
        String id = null;
        api.taskByIdGet(accept, id);

        // TODO: test validations
    }
    
    /**
     * Task8f9d8732968d11e7B2330242ac110002Put
     *
     * TODO: Add Description
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void taskByIdPutTest() throws ApiException {
        String accept = null;
        String id = null;
        String contentType = null;
        Model1task17Bid7Drequest body = null;
        api.taskByIdPut(accept, id, contentType, body);

        // TODO: test validations
    }
    
    /**
     * TaskD7e3213e968611e7B2330242ac110002CompletePost
     *
     * TODO: Add Description
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void taskCompleteByIdPostTest() throws ApiException {
        String accept = null;
        String contentType = null;
        Object body = null;
        String id = null;
        api.taskCompleteByIdPost(accept, contentType, body, id);

        // TODO: test validations
    }
    
    /**
     * TaskCreatePost
     *
     * TODO: Add Description
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void taskCreatePostTest() throws ApiException {
        String accept = null;
        String contentType = null;
        Model1task1createrequest body = null;
        api.taskCreatePost(accept, contentType, body);

        // TODO: test validations
    }
    
    /**
     * TaskGet
     *
     * TODO: Add Description
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void taskGetTest() throws ApiException {
        String accept = null;
        api.taskGet(accept);

        // TODO: test validations
    }
    
    /**
     * TaskPost
     *
     * TODO: Add Description
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void taskPostTest() throws ApiException {
        String accept = null;
        String contentType = null;
        Model1taskrequest body = null;
        api.taskPost(accept, contentType, body);

        // TODO: test validations
    }
    
    /**
     * Task3fde9e439aed11e792b20242ac110002VariablesGet
     *
     * TODO: Add Description
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void taskVariablesByIdGetTest() throws ApiException {
        Boolean deserializeValues = null;
        String accept = null;
        String id = null;
        api.taskVariablesByIdGet(deserializeValues, accept, id);

        // TODO: test validations
    }
    
}
